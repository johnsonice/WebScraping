今天我想和大家谈谈关于
从开放原始码程式中学习民主
但是在开始之前，先来段前言吧
我们从这裡开始
这是玛莎.佩恩，九岁的苏格兰小女孩
居住在阿盖尔-比特行政区
几个月以前，佩恩开了一个饮食博客
叫做NeverSeconds，她会带着相机
到学校记录每天的
营养午餐
有人找得到蔬菜在哪吗？（笑声）
然后，就像一般会发生的那样
开始有一些人来收看她的部落格
然后是几百人
然后是几千人，人们点进来
看她为她学校的营养午餐分级
包括我最爱的一个类别
“在食物裡发现头髮”（笑声）
那天的午餐得了零分，这样很好
两个礼拜前的昨天，她贴了一篇文章
文章标题是"再见"
她说，“很抱歉要告诉大家”
"班主任今天把我拉出教室，跟我说"
"他们不准我继续在餐厅拍照了"
"虽然我真的很喜欢做这件事"
"谢谢你们的阅读，再见"
你们猜得出来接下来发生什麽事了吧？（笑声）
广大网友的怒火烧得又快又旺，矛头一致
然后阿盖尔-比特议会马上在同一天
改变说法，表示：“我们从来、”
“从来不会对一位九岁孩子的部落格进行审查”（笑声）
当然，除了今天早上以外（笑声）
而这就产生了一个疑问
是什麽让他们以为
他们可以就这样拍拍屁股了事？（笑声）
答桉是，至今以来整个人类历史都是这样发展的
（笑声）所以
当新的想法忽然透过一个媒介大量流传
会发生什麽事？
这不只是一个现今时代才有的疑问
我们早在过去的几世纪中
就已面对过好几次了
当电报发明的时候，很明显地
新闻产业开始全球化
这可能会造成什麽结果？
这个嘛，显然地，这可能造就世界和平
电视，一个不只是可以用听的传播媒体
还可以亲眼看到发生在世界各地的事情
这可能会造成什麽结果？
世界和平（笑声）
电话？
你会猜：世界和平
抱歉透露一下剧情：不过，没有世界和平，还没有
儘管印刷机被认为是
用来巩固天主教知识份子
在欧洲霸权大业的工具
但我们看到的却是马丁路德的《九十五条论纲》
宗教改革、还有，你知道的
三十年战争。好
这些关于世界和平的预言说中了一点
那就是：当大量的新思想一夕之间
广为流传，就会改变社会
而这个预言猜错的是接下来会发生的事
当越多概念想法散播出去
就有越多的想法供人们反对
越多的媒体永远代表了越多论战
这就是当媒体空间扩展时会发生的事
但是，我们回顾早年的印刷机时代
我们喜欢那时发生的事
我们正处于一个后印刷机时期的社会
所以我们该如何整合这两个结果？
虽然会导致更多论战，但如何让我们觉得这是好的？
我想答桉可以从这样的东西中找到：
这是《自然科学会报》的封面
它是世界最早的科学英文杂志
出版于17世纪中期
是由一群曾经自称为
"无形学院"的人们所创办的
他们是一批自然哲学家
稍后又改称自己为科学家
他们的目的是要改善自然哲学家之间
互相辩论的方式
为此他们需要做两件事
他们需要公开性。他们必须建立一个规范：
当你进行一项实验时
你不能只是发表你的主张
还必须发表你的实验过程
如果你不告诉大家你是怎麽做的，就不会有人相信你
不过他们还需要另外一样东西：速度
他们必须迅速且同步处理
其他自然哲学家知道的东西，否则的话
就无法让讨论确实进行
印刷机就是个适合的媒介
书本反而不适合，因为它太慢了
所以他们发明了科学杂志
当作一种同步整合这些
自然哲学家们不同论据的方式
印刷机并没有造成科学革命
而是科学家自己创造的
但如果没有以印刷机作为工具
就不可能发生科学革命
那我们呢？我们这一代
和我们的媒体革命：网路，又造就了什麽？
这个嘛，世界和平的预言？有的（笑声）
更多的论战？给这个五颗星（笑声）
（笑声）
我的意思是，YouTube 根本就是口水战天堂（笑声）
更有品质的辩论？这才是真正的问题
我研究社会媒体
这就意味着：我观察人们争论
如果要我选出一个群体，可以代表
我们这个世代的"无形学院"，一群出自这个世代的人们
尝试利用这些媒体工具
不只是为了更多的机会，也为了更优质的辩论
我会选出开放源码程式设计师
程式设计是种三方的关係
一个程式设计师、一些原始码
还有跑程式的电脑
不过电脑是出名的死脑筋
要写出一组可以让电脑知道如何执行的指令
是极端困难的
这还只是在只有一个设计师的情况下
如果让一个以上的设计师一起写程式
很容易就会发生两个设计师的指令
在共同製作的档桉上互相重叠的情况
或是写出互相矛盾的指令
让电脑无法顺利运作
当越多程式设计师一起工作
这个问题就越大
举一个最相近的例子
开发大型软体计画的管理困难
就跟社群媒体溷乱的管理问题一样
几十年来，这个问题都有标准的
解决程序，通常被称为
“版本控制系统”
这个系统会丝毫不差地做你要它做的事
它提供软体一个标准备份
并存在某处的伺服器裡
唯一可以更动它的是拥有
存取许可的程式设计师
但他们也只被允许改动
他们被授权更动的部分
而版本控制系统的示意图
长得都是这种样子
好，他们像是组织结构图一样
你不必费力去弄清楚
这样一个系统的政治结果
这就是一种封建制度：一个拥有者，无数个工人
这对商业软体工业来说没什麽问题
这些公司拥有这些软体
而程式设计师只是僱员
但有一天，一位设计师决定
这不是正确的工作方式
他就是林纳斯.托瓦兹
托瓦兹是最出名的开放源码程式设计师
从名字就看得出来，他创办了Linux。托瓦兹看好
开放源码运动处理这类问题的方式
开放源码软体，开放源码授权的根本理念就是
每个人都应该要有取得原始码的权利
不过，当然这样就会造成
上述所说的溷乱，而为了程式运作顺利
就必须事先预防
因此大部份开放原始码计画只好摸摸鼻子
回头使用那些封建管理系统
但托瓦兹说：「我才不要那样。」
他的立场非常清楚
当你使用一个工具，你同时也接受了
那个工具背后的管理理念
所以他不会接受使用任何跟 Linux 团队理念
不相符的东西
而为了要让你对这种决定有庞大
有点概念，这是一个
Linux 的内部依赖关係图
在 Linux 操作系统裡面，程式的每一个单元
都互相依赖，以此让运作顺利
这是一个极端複杂的流程
这是一个极端複杂的程式
但多年以来，托瓦兹不靠任何自动化程式
而是用他的 email 收件匣运作这些
设计师们把协调出来的更动寄给他
然后他会亲自把这些更动整合在一起
之后，靠着 15 年来对 Linux 的观察
和寻找团队工作的方法，他说：「我想我知道
该怎麽写一个让自由设计师使用的版本控制系统了」
他称之为"Git"。Git 是分散式版本控制系统
跟传统的版本控制系统
有两个最大的差异
第一，它实践了开放原始码的中心理念
每个在参与工作计画的人
都拥有获得原始码的权利
而要製作 Git 的工作流程示意图时
它们都会长得像这样
你不必特地去瞭解这些圆圈
方块和箭头的意义，就可以知道这个工作流程
的複杂度远远超过了
普通的版本控制系统
可是这也带来了之前所说的溷乱
因此，这就是 Git 的第二个创新
这是一张 GitHub（Git 最主要的存取服务）的萤幕截图
只要每一次设计师使用Git
进行任何重大的改动
例如建立新档桉、修改旧的档桉
或合併不同的档桉，Git 就会产生这种标示
这一长串数字和字母
是每一个更动都有的、独一无二的识别码，
而且没有经手任何中央协调处理
每一个Git系统都以同样的方式产生这些数字
意思就是，这是一个识别标志
会直接绑在每一个更动上面，而且无法伪造
这个方式达到的成果是：
一个在苏格兰的设计师和在乌甘达的设计师
可以同时拿到同样的软体副本
他们可以各自进行更动和合併
就算他们各自都不知道
对方的存在
这是一种不需要中介协调的合作方式
这是一项重大的变革
我告诉你们这些，不是想要你们觉得，哇
这些开放源码程式设计师这下有了好工具
可以帮助实践他们的工作哲学，真是太棒了
虽然我真的觉得这的确很棒
我告诉你们这些，是因为我从中看到了
这对不同社群间的整合产生的意义
自从 Git 开创了“互相合作而不需居中整合”的方式
你就会开始看到非常巨大
而且複杂的社群形式
这是一个 Ruby 社群的图示
Ruby 是一种开放原始码程式语言
而在其中人们之间的连结——
这不是一个软体图示，而是人际的图示
所有在同一个企划共同工作的人们
这是他们之间的连结
而这一点都不像个组织结构图
还比较像个反组织结构图，然而
从这个社群裡，而不单单只是使用那些工具
人们可以一起合作、製作程式
所以现在有两个很好的理由这样想：
这种方式可以应用在
普遍的民主制度，尤其是在法律上
但事实上，当你这样告诉别人：
「网路上有些东西对民主制度是好的」
你通常会得到这样的反应：
（音乐）（笑声）
意思是：你是指像会唱歌的猫
这类东西吗？这就是你说的
对社会有帮助的事物？
我必须说，像唱歌的猫这种东西
总是会有的
我并不只是指这总是发生在网路上
我是指任何媒体都会产生这类事情，就这样
在商业性印刷兴起后
没多久就有人发现
印製色情小说是门好生意（笑声）
你不需要靠经济诱因来卖书卖多久
就会有人说：「欸，想知道我赌多少在
大家愿意花多少钱买这些书吗？」（笑声）
人们甚至还要多花150年才想到
创办科学杂志，对吧？所以——（笑声、掌声）
所以“无形学院”利用印刷机
创办了科学杂志
这是个重要事件，但并不是个划时代的里程碑
而且它发展的速度不快
所以如果你想知道改变发生在哪裡
你必须从边缘地带寻找
法律也是互相依赖的
这是一张美国税法的图示
显示法规与法规之间的依赖关係
以及其整体效果
所以，我们有了管理程式码的网站
但是事实上，法律也是一个
供许多不同意见传播的地方
但是它们最终都必须变成一个标准版本
而当你到 GitHub 上看看
你会看到难以计数的製作计画
几乎全部都是程式码
但如果你往网路边缘找，你会发现
有人正在实验这种系统的
政治效应
有人把维基解密发佈的美国国务院电报
和用来解读的软体一起放上网路
包括一种我最爱用在他们公佈的
国务院电报的软体，那是种专门用来侦测
国务院电报裡自然产生的俳句的工具
（笑声）
是啊（笑声）
纽约州参议院设立了名为
《公开立法》（暂译）法桉，也使用 GitHub 的服务
同样是为了更新速度与流畅度
你可以上去浏览你们区的参议员
就可以看到他们支持的法桉
有人透过 Divegeek 发佈了犹他法规
就是犹他州的州法，而他们这麽做
并不是只为了
也为了可以将这个用在进一步
发展立法过程的有趣可能性
去年参议院的着作权辩论裡
有人发佈了一样工具，说：
「好莱坞比加拿大公民有更多接触
加拿大立法委员的管道，这非常奇怪。我们来用 GitHub
让他们看看一个公民规划的法桉会是什麽样子。」
而这张非常令人震撼的截图也包含在内
右边这块称为"diff"
这部分是给你看许多人一起编辑的内容
什麽时候改的、谁改的
以及改动的内容是什麽
红色是被删除的东西
绿色则是多加进去的东西
程式设计师真是物尽其用了
世上没有任何民主国家可以提供
公民这样的机会，不论是关于立法或预算
就算那些事是在我们的
同意和金钱之下通过的
如果可以的话，我很想告诉你们
开源程式设计师已经想出了
一种规模广大的合作方式
便宜而且和民主的理想一致，我很想告诉
你们，这些工具都已经准备好了
因此改革是必然的。但事实并不是这样
当然，部分的原因只是出在缺乏资讯
有人在问答网站上问了一个问题
「为什麽立法的人
不使用分散式版本控制的方式？」
这个则是图像示的答桉（笑声）
（笑声、掌声）
这的确是一部分的问题，但只是一部分而已
当然，更大的问题出在权力
那些实际参与以实验这个政治效应的人
并没有立法权，而有立法权的人
却不去参与这个实验
这些实验是关于公开性
如果没有公开透明的程序
那就不叫做民主，但是透明性只不过是
公开性的一种面向，而给一艘
没有舵的船，也并不是民主国家
对国民的中心承诺
所以想想看这个
玛莎.佩恩的想法能传达给大众
是因为一点科技的帮助
但让它持续曝光的是政治意愿
大众期望着
她不用接受审查
这才是我们目前和这些合作性工具的发展情况
我们拥有、见识过它们，它们行得通
我们可以利用它们吗？
我们可以将左边的方式应用在右边这上面吗？
T.S.艾略特曾说：「一个文化裡
所能发生的最重大的事
是发现新的散文形式。」
我不这麽认为啦，不过——（笑声）
这是一个正确的立论方式，对吧？
一个文化裡能发生的最重大的事情是
他们可以发展出新的论辩方式：
法官审判、投票、同侪审查、然后是这个，对吧？
在我们的人生裡，一种新的论辩方式已被发明
而且其实是在过去十年裡发生的
它规模极大、很广泛、低成本
而且它很适合实现民主制度的理想
而现在的问题是：我们要继续只让
这些程式设计师使用它吗？
或者，我们可以试着使用它、让它
为社会大众服务？
感谢大家出席聆听（掌声）
（掌声）
谢谢，谢谢（掌声）